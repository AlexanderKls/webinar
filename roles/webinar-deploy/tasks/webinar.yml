---

- name: Create directory if they don't exist
  tags: webinar, webinar_create
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - /opt/webinar-nginx
    - /opt/webinar-mysql/dump
    - /opt/webinar-bastion
  register: common_files

- name: Create app directory
  tags: webinar, webinar_create
  file:
    path: '/opt/webinar-app/'
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
  register: common_files

- name: Copy frontend app
  tags: webinar, webinar_create
  template:
    src: "templates/wsgiapp.py.j2"
    dest: "/opt/webinar-app/wsgiapp.py"
    owner: 'www-data'
    group: 'www-data'
    mode: '0755'
  register: common_files

- name: Copy dump
  tags: webinar, webinar_create
  template:
    src: "templates/webinar.sql.j2"
    dest: "/opt/webinar-mysql/dump/webinar.sql"
    owner: root
    group: root
    mode: 0644
  register: common_files

- name: Copy nginx config
  tags: webinar, webinar_create
  copy:
    src: "files/webinar_nginx"
    dest: "/opt/webinar-nginx/webinar"
    owner: root
    group: root
    mode: 0644
  register: common_files

- name: Copy docker-compose
  tags: webinar, webinar_create
  template:
    src: "templates/docker-compose.yml.j2"
    dest: "{{ webinar_docker_file }}"
    owner: root
    group: root
    mode: 0700
  register: docker_compose_file

#- name: Shutdown containers if running
#  tags: webinar, webinar_create
#  docker_compose:
#    project_src: /opt/webinar-bastion/
#    state: absent
#    remove_orphans: true
#    debug: true
#  when: docker_compose_file.changed

#- name: Run docker-compose
#  tags: webinar, webinar_create
#  docker_service:
#    project_src: '/opt/webinar-bastion/'
#  when: docker_compose_file.changed

# Вообще по уму нужно использовать конструкцию сверху. Но это зависит от версии ansible, которая используется.
# В версиях ansible =< 2.7 нужно использовать docker_service, выше - docker_compose.
# Так как в тестовом не было задачи на подготовку среды, я решил использовать метод ниже, чтобы при запуске избежать проблем.

# Но этот метод так же не запустится, если используется `docker compose` - то есть версия на Go. 
# И еще я не смог определиться, использовать handlers через notify, или таски. Решил оставить таски.

- name: Docker-compose down, if files was be changed
  shell: "docker-compose -f {{ webinar_docker_file }} down"
  ignore_errors: true
  when: docker_compose_file.changed or common_files.changed

- name: Docker-compose up, if files was be changed
  shell: "docker-compose -f {{ webinar_docker_file }} up -d"
  when: docker_compose_file.changed or common_files.changed
